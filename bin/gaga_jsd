#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import click
import gaga
import phsp
import torch
import os
import numpy as np
from torch.autograd import Variable
import torch.nn.functional as F
from matplotlib import pyplot as plt
from scipy.stats import entropy

CONTEXT_SETTINGS = dict(help_option_names=['-h', '--help'])
@click.command(context_settings=CONTEXT_SETTINGS)
@click.argument('phsp_filename')
@click.argument('pth_filename')
@click.option('--n', '-n',
              default=1e4,
              help='Number of samples to generate')
@click.option('--nb_bins', '-b',
              default=int(200),
              help='Number of bins')
@click.option('--ofile', '-o',
              default='',
              help='append in a output file')
def gaga_jsd(phsp_filename, pth_filename, n, nb_bins, ofile):
    '''
    \b
    Compute JSD between real and GAN generated distributions

    \b
    <PHSP_FILENAME>   : input phase space file PHSP file (.npy)
    <PTH_FILENAME>    : input GAN PTH file (.pth) or a second .npy file
    '''

    n = int(n)

    # load phsp
    real, all_keys, m = phsp.load(phsp_filename, n, random=True)

    #
    ext = os.path.splitext(pth_filename)[1]
    if ext == '.pth':
        # load pth
        params, G, optim, dtypef= gaga.load(pth_filename)
        # generate samples
        fake = gaga.generate_samples2(params, G, n,
                                      batch_size=1e5, un_norm=True, to_numpy=True)
    else:
        fake, keys, m = phsp.load(pth_filename, n)

    keys = params['keys']
    x_dim = fake[0].size

    j = []
    for i in range(x_dim):
        index = all_keys.index(keys[i])
        x = real[:,index]
        y = fake[:,i]
        jsd = gaga.Jensen_Shannon_divergence(x, y, nb_bins)
        j.append(jsd)
        print('{} {:3.6f}'.format(keys[i], jsd))

    if ofile != '':
        f = open(ofile, "a+")
        f.write(pth_filename+' ')
        for jsd in j:
            f.write("{:3.10} ".format(jsd))
        f.write('\n')
        f.close()
        

# --------------------------------------------------------------------------
if __name__ == '__main__':
    gaga_jsd()

